The algorithm became more complicated when we started dealing with sentences. In our number encoding scheme, we counted punctuation as coding for the digit one (e.g. ‘but, said I’ would correspond to 3141), but we wanted to be able to insert the ‘.’ token anywhere, so as not to have incredibly long sentences and, in general, to give the algorithm more flexibility in finding likely utterances. The complication came because now, if the paths “Why , that I would usurper’s” and “But I have a heart .” were in our priority heap, we could not treat them in the same way. The first advanced in our list of constraints and needed a word of length 2, the other did not, and needed a word of length 9. In this case we split our priority heap by which paths advanced along in satisfying a constraint and which did not, recursed separately on each part, combined the results from the two recursive calls and returned the best N.